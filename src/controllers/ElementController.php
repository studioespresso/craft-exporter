<?php

namespace studioespresso\exporter\controllers;

use Craft;
use craft\helpers\UrlHelper;
use craft\web\Controller;
use craft\web\View;
use studioespresso\exporter\elements\ExportElement;
use studioespresso\exporter\Exporter;
use studioespresso\exporter\services\ExportConfigurationService;
use yii\web\Response;

class ElementController extends Controller
{
    private ExportConfigurationService $config;

    /**
     * @inheritDoc
     */
    public function init(): void
    {
        $this->config = Exporter::getInstance()->configuration;
        parent::init(); // TODO: Change the autogenerated stub
    }


    public function actionCreate(): Response
    {
        return $this->renderTemplate('exporter/_export/_edit', [
            'export' => new ExportElement(),
            'elementTypeOptions' => $this->config->getAvailableElementTypes(),
        ], View::TEMPLATE_MODE_CP);
    }

    public function actionEdit($elementId)
    {
        return $this->renderTemplate('exporter/_export/_edit', [
            'exportId' => $elementId,
            'elementTypeOptions' => $this->config->getAvailableElementTypes(),
        ], View::TEMPLATE_MODE_CP);
    }

    public function actionSave()
    {
        $body = $this->request->getBodyParams();
        if (!isset($body['elementId'])) {
            $export = new ExportElement();
        } else {
            $export = ExportElement::findOne(['id' => $body['elementId']]);
        }

        $export->name = $body['name'];
        $export->elementType = $body['elementType'];
        Craft::$app->getElements()->saveElement($export);

        $redirect = Craft::$app->getRequest()->getValidatedBodyParam('redirect');
        return $this->redirect(UrlHelper::cpUrl($redirect, ['export' => $export->uid]));
    }
}
