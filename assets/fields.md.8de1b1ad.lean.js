import{_ as i,C as s,o as r,c as n,k as e,a as t,H as o,Q as l}from"./chunks/framework.733d63d2.js";const Y=JSON.parse('{"title":"Elements, fields & formats - Element exporter plugin for Craft CMS","description":"Documentation for Element Exporter, a plugin for Craft CMS.","frontmatter":{"title":"Elements, fields & formats - Element exporter plugin for Craft CMS","layout":"doc","prev":false,"description":"Documentation for Element Exporter, a plugin for Craft CMS."},"headers":[],"relativePath":"fields.md","filePath":"fields.md"}'),d={name:"fields.md"},p=l("",6),f=l("",3),u={id:"relationfieldparser",tabindex:"-1"},c=e("a",{class:"header-anchor",href:"#relationfieldparser","aria-label":'Permalink to "RelationFieldParser <Badge type="info" text="4.0.0" />"'},"​",-1),h=e("ul",null,[e("li",null,"Used for any relation fields"),e("li",null,[t("Output options are: "),e("code",null,"title"),t(", "),e("code",null,"id"),t(", "),e("code",null,"url")])],-1),_={id:"optionsfieldparser",tabindex:"-1"},m=e("a",{class:"header-anchor",href:"#optionsfieldparser","aria-label":'Permalink to "OptionsFieldParser <Badge type="info" text="4.0.0" />"'},"​",-1),b=e("ul",null,[e("li",null,"Used for any single-value select fields (dropdown, radio buttons)"),e("li",null,[t("Output options are: "),e("code",null,"label"),t(", "),e("code",null,"value")])],-1),x={id:"multioptionsfieldparser",tabindex:"-1"},P=e("a",{class:"header-anchor",href:"#multioptionsfieldparser","aria-label":'Permalink to "MultiOptionsFieldParser <Badge type="info" text="4.0.0" />"'},"​",-1),T=e("ul",null,[e("li",null,"Used for any multi-value select fields (checkboxes)"),e("li",null,[t("Output options are: "),e("code",null,"label"),t(", "),e("code",null,"value")])],-1),g={id:"optionsfieldparser-1",tabindex:"-1"},y=e("a",{class:"header-anchor",href:"#optionsfieldparser-1","aria-label":'Permalink to "OptionsFieldParser <Badge type="info" text="4.0.0" />"'},"​",-1),S=e("ul",null,[e("li",null,"Used for any dropdown or select fields"),e("li",null,[t("Output options are: "),e("code",null,"label"),t(", "),e("code",null,"value")])],-1),k={id:"datetimeparser",tabindex:"-1"},C=e("a",{class:"header-anchor",href:"#datetimeparser","aria-label":'Permalink to "DateTimeParser <Badge type="info" text="4.0.0" />"'},"​",-1),v=l("",1),E={id:"timeparser",tabindex:"-1"},O=e("a",{class:"header-anchor",href:"#timeparser","aria-label":'Permalink to "TimeParser <Badge type="info" text="4.0.0" />"'},"​",-1),w=e("ul",null,[e("li",null,"Used for Date and DateTime fields"),e("li",null,[t("Output options are: "),e("code",null,"H:i:s"),t(", "),e("code",null,"H:i")])],-1),B={id:"plaintextparser",tabindex:"-1"},D=e("a",{class:"header-anchor",href:"#plaintextparser","aria-label":'Permalink to "PlainTextParser <Badge type="info" text="4.0.0" />"'},"​",-1),V=e("p",null,"Straight forward, this output the data as it's entered. This is also the fallback for any data that can't be process by the other parsers.",-1);function q(F,M,A,I,N,H){const a=s("Badge");return r(),n("div",null,[p,e("ul",null,[e("li",null,[t("XLSX "),o(a,{type:"info",text:"4.0.0"})]),e("li",null,[t("CSV "),o(a,{type:"info",text:"4.0.0"})])]),f,e("h3",u,[t("RelationFieldParser "),o(a,{type:"info",text:"4.0.0"}),t(),c]),h,e("h3",_,[t("OptionsFieldParser "),o(a,{type:"info",text:"4.0.0"}),t(),m]),b,e("h3",x,[t("MultiOptionsFieldParser "),o(a,{type:"info",text:"4.0.0"}),t(),P]),T,e("h3",g,[t("OptionsFieldParser "),o(a,{type:"info",text:"4.0.0"}),t(),y]),S,e("h3",k,[t("DateTimeParser "),o(a,{type:"info",text:"4.0.0"}),t(),C]),v,e("h3",E,[t("TimeParser "),o(a,{type:"info",text:"4.0.0"}),t(),O]),w,e("h3",B,[t("PlainTextParser "),o(a,{type:"info",text:"4.0.0"}),t(),D]),V])}const R=i(d,[["render",q]]);export{Y as __pageData,R as default};
